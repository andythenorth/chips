<tal:include metal:use-macro="load: spritesets_legacy.pynml" />

<tal:include metal:use-macro="load: spritelayouts_rail_station.pynml" />

<tal:stations repeat="station stations">

    switch(FEAT_STATIONS, SELF, switch_${station.id}_prepare_layout, [
        <tal:custom_sprite_indexes repeat="custom_sprite_index_struct station.custom_sprite_index_structs">
            // ${custom_sprite_index_struct[2]}
            STORE_TEMP(${custom_sprite_index_struct[0]}, ${custom_sprite_index_struct[1]}),
        </tal:custom_sprite_indexes>
        <!--! snow sprite is partially provided, but incomplete, so nerf it by forcing the register to 1 (hide snow) -->
        STORE_TEMP(1, ${graphics_temp_storage.var_hide_building_snow}),
        ]) {
        return;
    }

    item(FEAT_STATIONS, ${station.id}, ${station.numeric_id}) {
        property {
            /* The class allows to sort stations into categories. */
            class:                  "${station.station_class.class_id}";
            /* If no other NewGRF provides this class before us, we have to name it */
    		classname:              string(${station.classname_string_id});
            /* Name of this particular station */
            name:                   string(${station.name_string_id});
            cargo_threshold: 160;
            draw_pylon_tiles: ${station.draw_pylon_tiles};
            hide_wire_tiles: ${station.hide_wire_tiles};
            non_traversable_tiles: ${station.non_traversable_tiles};
        }
        graphics {
            sprite_layouts: ${station.spritelayouts_as_nml_array};
            <!--!custom_spritesets: [${','.join(station.custom_spriteset_mapping.keys())}];-->
            prepare_layout: switch_${station.id}_prepare_layout();
            <!--! purchase: cow_pen_half; -->
            <!--! cargo specific callback
            LVST: random_${facility_type.id}_1;
            -->
            <!--!cow_pen_empty;-->
        }
    }
</tal:stations>

