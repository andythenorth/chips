<tal:feature_type repeat="feature_type ['FEAT_OBJECTS', 'FEAT_ROADSTOPS', 'FEAT_STATIONS']">
    <!--! !!!!!!!! CABBAGE as of October 2023 nearby_tile_slope(0,0) is used rather than tile_slope
         as the implementation of slopes was missing from road stop var 0x42, which tile_slope depends on
    -->

    <!--! can't check for water directly on the object tile, as it's not reliable on coasts, so offset to appropriate nearby tiles and check for water class
          this has to be slope-specific to avoid annoying corner cases
          we also check tile height as we only want water at height level 0
    -->
    <tal:water_checks repeat="tile_offset_mapping foundations.tile_offset_mapping_for_nml_water_check()">
        switch(${feature_type}, SELF, ${feature_type}_switch_initialise_foundations_check_water_${tile_offset_mapping["slope_name"]},
        [
            <tal:tile_offsets repeat="tile_offset tile_offset_mapping['offsets']">
                (
                    (nearby_tile_water_class(${tile_offset[0]}, ${tile_offset[1]}) != WATER_CLASS_NONE)
                    &&
                    (nearby_tile_height(${tile_offset[0]}, ${tile_offset[1]}) == 0)
                )
                | <!--! bitwise OR seems to be needed here -->
            </tal:tile_offsets>
            0 <!--! 0 to OR with the last | inserted by the repeat -->
        ]) {
            return;
        }
    </tal:water_checks>
    <!--! check nearby tiles for water, this has to be slope-specific to avoid annoying corner cases -->
    switch(${feature_type}, SELF, ${feature_type}_switch_initialise_foundations_nearby_tile_is_water, nearby_tile_slope(0,0)) {
        <tal:foundation_slope_mapping repeat="slope_mapping foundations.custom_foundation_mapping_for_nml_slope_check()">
            ${slope_mapping["slope_name"]}: ${feature_type}_switch_initialise_foundations_check_water_${slope_mapping["slope_name"]}();
        </tal:foundation_slope_mapping>
        return 0; <!--! default case is 'not water' -->
    }

    <!--! store the spriteset indexes for custom foundations to use next to water, these are multiplied by a bool for 'tile is next to water', with index 0 being a blank sprite -->
    switch(${feature_type}, SELF, ${feature_type}_switch_initialise_foundations_store_custom_spriteset_numbers, sw_face, se_face, [
            STORE_TEMP(
                sw_face * LOAD_TEMP(${graphics_temp_storage.var_foundations_tile_has_water_nearby}),
                ${graphics_temp_storage.var_custom_foundation_sw_face}
            ),
            STORE_TEMP(
                se_face * LOAD_TEMP(${graphics_temp_storage.var_foundations_tile_has_water_nearby}),
                ${graphics_temp_storage.var_custom_foundation_se_face}
            ),
        ]) {
        return;
    }
    switch(${feature_type}, SELF, ${feature_type}_switch_initialise_custom_foundation_spriteset_numbers, nearby_tile_slope(0,0)) {
        <tal:foundation_slope_mapping repeat="slope_mapping foundations.custom_foundation_mapping_for_nml_slope_check()">
            ${slope_mapping["slope_name"]}: ${feature_type}_switch_initialise_foundations_store_custom_spriteset_numbers(${slope_mapping["sw_face"]}, ${slope_mapping["se_face"]});
        </tal:foundation_slope_mapping>
        return;
    }

    switch(${feature_type}, SELF, ${feature_type}_switch_initialise_foundations_graphics, [
            STORE_TEMP(${feature_type}_switch_initialise_foundations_nearby_tile_is_water(), ${graphics_temp_storage.var_foundations_tile_has_water_nearby}),
            ${feature_type}_switch_initialise_custom_foundation_spriteset_numbers(),
        ]) {
        return;
    }
    switch(${feature_type}, SELF, ${feature_type}_switch_initialise_foundations_purchase, [
            STORE_TEMP(0, ${graphics_temp_storage.var_foundations_tile_has_water_nearby}),
            ${feature_type}_switch_initialise_foundations_store_custom_spriteset_numbers(0, 0),
        ]) {
        return;
    }

    switch(${feature_type}, SELF, switch_initialise_foundations_${feature_type}, context_is_purchase, context_is_purchase) {
        1: ${feature_type}_switch_initialise_foundations_purchase;
        ${feature_type}_switch_initialise_foundations_graphics;
    }
</tal:feature_type>
