<tal:orientation repeat="orientation ['ne_sw', 'nw_se']">
    <tal:track_spritelayouts repeat="spritelayout facility_type.rail_spritelayouts['track']">
        spritelayout ${spritelayout.id}_track_${orientation} {
            ground {
                sprite: GROUNDSPRITE_RAIL_${'X' if orientation == 'ne_sw' else 'Y'};
            }
            <!--!
                we index to the ground type appropriate to the station
                platform sprites are split in 2 for historical reasons, not sure it's necessary, but eh, 2 sprites for those
                both platforms are in the same spriteset, index into rear or front part as needed
            -->
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(${'0' if orientation == 'ne_sw' else '1'}));
                always_draw: 1;
            }
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(${'2' if orientation == 'ne_sw' else '3'}));
                always_draw: 1;
            }
            <tal:ground_overlay_sprites repeat="sprite spritelayout.ground_overlay_sprites[orientation]">
                <!--! ground overlay (snow aware) -->
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }
                <!--! CABBAGE - nerfed off to make compile work
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:ground_overlay_sprites>

            <tal:rear_building_sprites repeat="sprite spritelayout.rear_building_sprites[orientation]">
                <!--! buildings (snow aware) -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};-->
                    <!--!always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }
                <!--! CABBAGE - nerfed off to make compile work
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:rear_building_sprites>

            <tal:front_building_sprites repeat="sprite spritelayout.front_building_sprites[orientation]">
                <!--! buildings (snow aware) -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};-->
                    <!--!always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }

                <!--! CABBAGE - nerfed off to make compile work
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:front_building_sprites>
        }
    </tal:track_spritelayouts>

    <tal:non_track_spritelayouts repeat="spritelayout facility_type.rail_spritelayouts['non_track']">
        spritelayout ${spritelayout.id}_non_track_${orientation} {
            <!--! not strictly necessary to draw the terrain tile as we'll 100% overlay it, but eh it seems more 'correct' to me -->
            ground {
                sprite: GROUNDSPRITE_NORMAL;
            }
            <!--!
                we index to the ground type appropriate to the station
            -->
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(0));
                always_draw: 1;
            }
            <tal:ground_overlay_sprites repeat="sprite spritelayout.ground_overlay_sprites[orientation]">
                <!--! ground overlay (snow aware) -->
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }
                <!--! CABBAGE - nerfed off to make compile work
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:ground_overlay_sprites>

            <tal:rear_building_sprites repeat="sprite spritelayout.rear_building_sprites[orientation]">
                <!--! buildings (snow aware) -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};-->
                    <!--!always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }
                <!--! CABBAGE - nerfed off to make compile work
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:rear_building_sprites>

            <tal:front_building_sprites repeat="sprite spritelayout.front_building_sprites[orientation]">
                <!--! buildings (snow aware) -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    <!--! CABBAGE - nerfed off to make compile work
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};-->
                    <!--!always_draw: ${building_sprite.always_draw};-->
                    <!--!hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building}));-->
                }

                <!--! CABBAGE - nerfed off to make compile work
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: ${building_sprite.xoffset};
                    yoffset: ${building_sprite.yoffset};
                    always_draw: ${building_sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                }-->
            </tal:front_building_sprites>
        }
    </tal:non_track_spritelayouts>
</tal:orientation>
