<tal:orientation repeat="orientation ['ne_sw', 'nw_se']">
    <tal:track_spritelayouts repeat="spritelayout facility_type.rail_spritelayouts['track']">
        spritelayout ${spritelayout.id}_track_${orientation} {
            ground {
                sprite: GROUNDSPRITE_RAIL_${'X' if orientation == 'ne_sw' else 'Y'};
            }
            <!--!
                we index to the ground type appropriate to the station
                platform sprites are *only split in 2 for historical reasons*, not sure it's necessary, but eh, 2 sprites for those
                both platforms are in the same spriteset, index into rear or front part as needed
            -->
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(${graphics_temp_storage['var_sprite_rear_platform_' + orientation]}));
                always_draw: 1;
            }
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(${graphics_temp_storage['var_sprite_front_platform_' + orientation]}));
                always_draw: 1;
            }
            <tal:ground_overlay_sprites repeat="sprite spritelayout.ground_overlay_sprites[orientation]">
                <!--! ground overlay (snow aware) - whole tile, no platform split needed as they are children of ground sprite -->
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--! no offsets or extents for these childsprites -->
                }
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:ground_overlay_sprites>

            <tal:rear_structure_sprites repeat="sprite spritelayout.rear_structure_sprites[orientation]">
                <!--! structure (snow aware) for the rear platform on track tile -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--!
                        extents (bounding boxes should match default stations, for simplicity of sprite sorting etc
                        https://github.com/OpenTTD/OpenTTD/blob/master/src/table/station_land.h#L61
                        - these use SPR_RAIL_PLATFORM_BUILDING_X values
                        - no bbox offsets needed
                    -->
                    xextent: ${16 if orientation == 'ne_sw' else 5};
                    yextent: ${5 if orientation == 'ne_sw' else 16};
                    zextent: 15;
                }
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:rear_structure_sprites>

            <tal:main_structure_sprites repeat="sprite spritelayout.main_structure_sprites[orientation]">
                <!--! primary structure (snow aware) for track tile - drawn in front of / above rail and train sprites on tile -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--!
                        extents (bounding boxes should match default stations, for simplicity of sprite sorting etc
                        https://github.com/OpenTTD/OpenTTD/blob/master/src/table/station_land.h#L61
                        - these use full tile as the main structure may extend over entire tile - as per SPR_RAIL_ROOF_STRUCTURE_X_TILE_A
                        - no bbox offsets needed
                    -->
                    xextent: 16;
                    yextent: 16;
                    zextent: 64; <!--! set high to accomodate tall buildings -->
                }

                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:main_structure_sprites>
        }
    </tal:track_spritelayouts>

    <tal:non_track_spritelayouts repeat="spritelayout facility_type.rail_spritelayouts['non_track']">
        spritelayout ${spritelayout.id}_non_track_${orientation} {
            <!--! non_track tile terrain - not strictly necessary to draw the terrain tile as we'll 100% overlay it, but eh it seems more 'correct' to me -->
            ground {
                sprite: GROUNDSPRITE_NORMAL;
            }
            <!--!
                we index to the ground type appropriate to the station
            -->
            childsprite {
                sprite: spriteset_ground_tiles(LOAD_TEMP(${graphics_temp_storage.var_sprite_whole_tile}));
                always_draw: 1;
            }
            <tal:ground_overlay_sprites repeat="sprite spritelayout.ground_overlay_sprites[orientation]">
                <!--! ground overlay (snow aware) -->
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--! no offsets or extents for these childsprites -->
                }
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:ground_overlay_sprites>

            <tal:rear_structure_sprites repeat="sprite spritelayout.rear_structure_sprites[orientation]">
                <!--! non_track tile uses the same 'rear' sprites as track tile rear platform, but with a whole-tile bounding box -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--! extents bounding boxes are just full tile for non_track tiles (also no bbox offsets needed) -->
                    xextent: 16;
                    yextent: 16;
                    zextent: 64; <!--! set high to accomodate tall buildings -->
                }
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:rear_structure_sprites>

            <tal:main_structure_sprites repeat="sprite spritelayout.main_structure_sprites[orientation]">
                <!--! primary structure (snow aware) for non_track tile -->
                building {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    <!--! extents bounding boxes are just full tile for non_track tiles (also no bbox offsets needed) -->
                    xextent: 16;
                    yextent: 16;
                    zextent: 64; <!--! set high to accomodate tall buildings -->
                }
                childsprite {
                    sprite: ${sprite.get_nml_declaration_for_sprite_in_spritelayout(orientation, snow=True)};
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    always_draw: ${sprite.always_draw};
                    hide_sprite: (LOAD_TEMP(${graphics_temp_storage.var_hide_building_snow}));
                    <!--! no offsets or extents for these childsprites -->
                }
            </tal:main_structure_sprites>
        }
    </tal:non_track_spritelayouts>
</tal:orientation>
